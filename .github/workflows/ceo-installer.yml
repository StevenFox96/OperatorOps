name: CEO Installer

on: 
  release:
    types: [created]

jobs:
  ceo-installer:

    runs-on: ubuntu-latest

    steps:
    
    - name: Environment variables & secrets validation
      env: 
        EOS_PRIVATE_KEY: ${{ secrets.EOS_PRIVATE_KEY }}
        PINATA_API_KEY: ${{ secrets.PINATA_API_KEY }}
        PINATA_SECRET_API_KEY: ${{ secrets.PINATA_SECRET_API_KEY }}
        CLOUDFLARE_API_KEY: ${{ secrets.CLOUDFLARE_API_KEY }}
        CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
      run: |
        if [ -z "$EOS_PRIVATE_KEY" ]; then echo "In order to continue, you must first create a secret named EOS_PRIVATE_KEY" && exit 1; fi 
        if [ -z "$PINATA_API_KEY" ]; then echo "In order to continue, you must first create a secret named PINATA_API_KEY" && exit 1; fi
        if [ -z "$PINATA_SECRET_API_KEY" ]; then echo "In order to continue, you must first create a secret named PINATA_SECRET_API_KEY" && exit 1; fi
        if [ -z "$CLOUDFLARE_API_KEY" ]; then echo "In order to continue, you must first create a secret named CLOUDFLARE_API_KEY" && exit 1; fi  
        if [ -z "$CLOUDFLARE_ZONE_ID" ]; then echo "In order to continue, you must first create a secret named CLOUDFLARE_ZONE_ID" && exit 1 ; fi
    
    - name: Checkout source code
      uses: actions/checkout@v1

    - name: Install Node.js 
      uses: actions/setup-node@v1

    - name: Upload frontend to pinata
      env:
        PINATA_API_KEY: ${{ secrets.PINATA_API_KEY }} 
        PINATA_SECRET_API_KEY: ${{ secrets.PINATA_SECRET_API_KEY }} 
      run: |
        cd webapp/deploy
        npm install
        IPFS_HASH=$(node app.js) 
        echo "::set-output name=ipfs_hash::$(echo $IPFS_HASH)"
      id: pinata-upload

    - name: Configure Cloudflare DNS
      env:
        MY_IPFS_HASH: ${{ steps.pinata-upload.outputs.ipfs_hash}}
        ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }} 
        CLOUDFLARE_API_KEY: ${{ secrets.CLOUDFLARE_API_KEY }}
      run: |        
        echo "MY_IPFS_HASH value is: ${MY_IPFS_HASH}"
        
        curl -X POST "https://api.cloudflare.com/client/v4/zones/${ZONE_ID}/dns_records" \
        -H "X-Auth-Email: haim@creator.eco" \
        -H "X-Auth-Key: ${CLOUDFLARE_API_KEY}" \
        -H "Content-Type: application/json" \
        --data '{"type":"CNAME","name":"haim","content":"www.cloudflare-ipfs.com","ttl":120,"priority":10,"proxied":false}'

        curl -X POST "https://api.cloudflare.com/client/v4/zones/${ZONE_ID}/dns_records" \
        -H "X-Auth-Email: haim@creator.eco" \
        -H "X-Auth-Key: ${CLOUDFLARE_API_KEY}" \
        -H "Content-Type: application/json" \
        --data '{"type":"TXT","name":"_dnslink.haim","content":"dnslink.haim=/ipfs/'${MY_IPFS_HASH}'","ttl":120,"priority":10,"proxied":false}'

